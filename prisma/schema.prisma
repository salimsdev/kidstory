// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

enum UserPlan {
  FREE
  PRO
  PREMIUM
  DELUXE
}

model User {
  id                      String    @id @default(cuid())
  name                    String?
  email                   String?   @unique
  emailVerified           DateTime?
  image                   String?
  password                String?
  plan                    UserPlan @default(FREE)
  stripeCustomerId        String? @unique
  subscriptionId          String?
  stripePriceId           String?
  stripeCurrentPeriodEnd  DateTime?
  messages                Int @default(0)
  accounts                Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id          String @id @default(cuid())
  email       String
  token       String @unique
  expires     DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id          String @id @default(cuid())
  email       String
  token       String @unique
  expires     DateTime

  @@unique([email, token])
}